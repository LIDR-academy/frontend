/**
 * This code was generated by Builder.io
 */
import React from "react";
import { Card } from "react-bootstrap";
import { useDrop } from "react-dnd";
import Candidate, { ICandidateProps } from "./Candidate";

export interface InterviewStageProps {
  id: number;
  title: string;
  candidates: ICandidateProps[];
  onDrop?: (candidateId: string, newStepId: number) => void;
}

const InterviewStage: React.FC<InterviewStageProps> = ({
  title,
  id,
  candidates,
  onDrop,
}) => {
  const [{ isOver }, drop] = useDrop(() => ({
    accept: "CANDIDATE",
    drop: (item: { candidateId: string }) => {
      return onDrop!(item.candidateId, id);
    },
    collect: (monitor) => ({
      isOver: !!monitor.isOver(),
    }),
  }));

  return (
    <Card
      ref={drop}
      className="h-100"
      style={{ backgroundColor: isOver ? "#f0f0f0" : "white" }}
    >
      <Card.Header className="bg-light">
        <h2 className="h4 mb-0">{title}</h2>
      </Card.Header>
      <Card.Body>
        {candidates.map((candidate) => (
          <Candidate key={candidate.fullName} {...candidate} />
        ))}
      </Card.Body>
    </Card>
  );
};

export default InterviewStage;
